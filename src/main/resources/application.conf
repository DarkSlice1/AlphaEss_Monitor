alphaess{
    username = username
    username = ${?ALPHA_USERNAME}
    password = password
    password = ${?ALPHA_PASSWORD}
    system_sn = 00000000
    system_sn = ${?ALPHA_SYS_SN}
}
tapo{
    username = username
    username = ${?TAPO_USERNAME}
    password = password
    password = ${?TAPO_PASSWORD}
    addresses = ""
    addresses = ${?TAPO_ADDRESSES}
    debugLogging = false
    debugLogging = ${?TAPO_DEBUGLOGGING}
}
ember{
    username = username
    username = ${?EMBER_USERNAME}
    password = password
    password = ${?EMBER_PASSWORD}
}
forcasting{
    # http://doc.forecast.solar/doku.php?id=api:estimate
    lat = "0"
    lat = ${?FORCAST_LAT}
    lon = "0"
    lon =  ${?FORCAST_LON}
    dec = "0"
    dec =  ${?FORCAST_DEC}
    az = "0"
    az =  ${?FORCAST_AZ}
    kwh = "0"
    kwh =  ${?FORCAST_KWH}
}
kamon {
  reporters = ["kamon.datadog.DatadogAgentReporter"]

  metric {

    # Time interval for collecting all metrics and send the snapshots to all subscribed actors.
    tick-interval = 10 seconds
    tick-interval = ${?KAMON_INTERVAL}

    # Disables a big error message that will be typically logged if your application wasn't started
    # with the -javaagent:/path-to-aspectj-weaver.jar option. If you are only using KamonStandalone
    # it might be ok for you to turn this error off.
    disable-aspectj-weaver-missing-error = false

    # Specify if entities that do not match any include/exclude filter should be tracked.
    track-unmatched-entities = yes
  }

  # Controls whether the AspectJ Weaver missing warning should be displayed if any Kamon module requiring AspectJ is
  # found in the classpath but the application is started without the AspectJ Weaver.
  show-aspectj-missing-warning = yes

  datadog {

    api{
        api-key = ""
        api-key = ${?KAMON_DATADOG_API_KEY}
    }

    agent{
        application-name = "alpha_ess_monitor"
        application-name = ${?KAMON_DATADOG_APP_NAME}

        # By default, this module assumes that you have an instance of the Datadog Agent running
        # in localhost and listening on port 8125. If that is not the case the you can use the
        # kamon.datadog.hostname and kamon.datadog.port configuration keys to point the
        # module at your Datadog Agent installation.
        hostname = localhost
        # Can be overriden by a System Property of HOST
        hostname = ${?KAMON_DATADOG_HOST}

        port = 8125
        port = ${?KAMON_DATADOG_PORT}


        # Interval between metrics data flushes to StatsD. It's value must be equal or greater than the
        # kamon.metrics.tick-interval setting.
        flush-interval = ${kamon.metric.tick-interval}

        # Max packet size for UDP metrics data sent to StatsD.
        max-packet-size = 1024 bytes
        max-packet-size = ${?KAMON_PACKET_SIZE}

        subscriptions {
          histogram = ["**"]
          min-max-counter = ["**"]
          gauge = ["**"]
          counter = ["**"]
          trace = ["**"]
          trace-segment = ["**"]
          akka-actor = ["**"]
          akka-dispatcher = ["**"]
          akka-router = ["**"]
          system-metric = ["**"]
          http-server = ["**"]
        }
     }
  }

  # modules can be disabled at startup using yes/no arguments.
  modules {
    kamon-datadog.auto-start = yes
    kamon-datadog.auto-start = ${?KAMON_DD_ENABLED}

    datadog-agent {
        enabled = true
    }

    datadog-trace-agent {
        enabled = true
    }

    datadog-api {
        enabled = true
    }
  }
  environment {
    # Identifier for this service.
    service = "alpha_ess_monitor"
    service = ${?KAMON_DATADOG_APP_NAME}
  }
}
